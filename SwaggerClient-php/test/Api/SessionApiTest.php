<?php
/**
 * SessionApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Scubawhere API Documentation
 *
 * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bryan@scubawhere.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiClient;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * SessionApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SessionApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for createSession
     *
     * Create a new session.
     *
     */
    public function testCreateSession()
    {

    }

    /**
     * Test case for deleteSession
     *
     * Delete a session by ID.
     *
     */
    public function testDeleteSession()
    {

    }

    /**
     * Test case for editSession
     *
     * Update a session by ID.
     *
     */
    public function testEditSession()
    {

    }

    /**
     * Test case for filterSessions
     *
     * Retrieve all of tsessions that match a filter.
     *
     */
    public function testFilterSessions()
    {

    }

    /**
     * Test case for getAllSessions
     *
     * Retrieve all sessions including any deleted models.
     *
     */
    public function testGetAllSessions()
    {

    }

    /**
     * Test case for getAllWithTrashedSessions
     *
     * Retrieve all sessions including any deleted models.
     *
     */
    public function testGetAllWithTrashedSessions()
    {

    }

    /**
     * Test case for getManifest
     *
     * Retrieve the customer manifest for this session.
     *
     */
    public function testGetManifest()
    {

    }

    /**
     * Test case for getSession
     *
     * Retrieve a session by ID.
     *
     */
    public function testGetSession()
    {

    }

    /**
     * Test case for getTodaySessions
     *
     * Retrieve all of todays sessions.
     *
     */
    public function testGetTodaySessions()
    {

    }

    /**
     * Test case for getTommorowSessions
     *
     * Retrieve all of tommorows sessions.
     *
     */
    public function testGetTommorowSessions()
    {

    }

}
