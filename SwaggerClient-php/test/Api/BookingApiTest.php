<?php
/**
 * BookingApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Scubawhere API Documentation
 *
 * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bryan@scubawhere.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiClient;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * BookingApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class BookingApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for addBookingDetail
     *
     * Add a package / course / ticket with its session to the booking.
     *
     */
    public function testAddBookingDetail()
    {

    }

    /**
     * Test case for attachAccommodation
     *
     * Attach an accommodation booking to a booking.
     *
     */
    public function testAttachAccommodation()
    {

    }

    /**
     * Test case for attachAddon
     *
     * Attach an addon to a trip of a booking.
     *
     */
    public function testAttachAddon()
    {

    }

    /**
     * Test case for attachPickup
     *
     * Attach a pickup location for a booking.
     *
     */
    public function testAttachPickup()
    {

    }

    /**
     * Test case for cancelBooking
     *
     * Cancel a booking.
     *
     */
    public function testCancelBooking()
    {

    }

    /**
     * Test case for confirmBooking
     *
     * Confirm a booking and all of its sessions and notify the lead customer.
     *
     */
    public function testConfirmBooking()
    {

    }

    /**
     * Test case for deleteBooking
     *
     * Delete a booking by ID.
     *
     */
    public function testDeleteBooking()
    {

    }

    /**
     * Test case for dettachAccommodation
     *
     * Dettach an accommodation booking to a booking.
     *
     */
    public function testDettachAccommodation()
    {

    }

    /**
     * Test case for dettachAddon
     *
     * Dettach an addon to a trip of a booking.
     *
     */
    public function testDettachAddon()
    {

    }

    /**
     * Test case for dettachPickup
     *
     * Dettach a pickup location for a booking.
     *
     */
    public function testDettachPickup()
    {

    }

    /**
     * Test case for editBookingInfo
     *
     * Edit the information related to a booking.
     *
     */
    public function testEditBookingInfo()
    {

    }

    /**
     * Test case for filterBookings
     *
     * Get all bookings matching a filter.
     *
     */
    public function testFilterBookings()
    {

    }

    /**
     * Test case for getAllBookings
     *
     * Retrieve all bookings.
     *
     */
    public function testGetAllBookings()
    {

    }

    /**
     * Test case for getAllWithTrashedBookings
     *
     * Retrieve all bookings including any deleted models.
     *
     */
    public function testGetAllWithTrashedBookings()
    {

    }

    /**
     * Test case for getBooking
     *
     * Retrieve a booking by ID.
     *
     */
    public function testGetBooking()
    {

    }

    /**
     * Test case for getCustomerBookings
     *
     * Get all bookings for a customer.
     *
     */
    public function testGetCustomerBookings()
    {

    }

    /**
     * Test case for getPayments
     *
     * Retrieve all payments made for a booking.
     *
     */
    public function testGetPayments()
    {

    }

    /**
     * Test case for getRefunds
     *
     * Retrieve all refunds for a booking.
     *
     */
    public function testGetRefunds()
    {

    }

    /**
     * Test case for getTodaysBookings
     *
     * Get all bookings made today.
     *
     */
    public function testGetTodaysBookings()
    {

    }

    /**
     * Test case for getTommorowsBookings
     *
     * Get all bookings made today.
     *
     */
    public function testGetTommorowsBookings()
    {

    }

    /**
     * Test case for initBooking
     *
     * Create a new empty booking.
     *
     */
    public function testInitBooking()
    {

    }

    /**
     * Test case for removeBookingDetail
     *
     * Remove a detail from a booking.
     *
     */
    public function testRemoveBookingDetail()
    {

    }

    /**
     * Test case for resendConfirmation
     *
     * Resend the confirmation email to the lead customer.
     *
     */
    public function testResendConfirmation()
    {

    }

    /**
     * Test case for reserveBooking
     *
     * Reserve a booking and its sessions capcity until a set date.
     *
     */
    public function testReserveBooking()
    {

    }

    /**
     * Test case for saveBooking
     *
     * Save a booking as a quote and release all capacity of sessions.
     *
     */
    public function testSaveBooking()
    {

    }

    /**
     * Test case for setLeadCustomer
     *
     * Set the lead customer for a booking.
     *
     */
    public function testSetLeadCustomer()
    {

    }

}
