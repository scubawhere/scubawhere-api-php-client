<?php
/**
 * ClasssessionApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Scubawhere API Documentation
 *
 * This is the documentation for scubawhere's RMS API. This API is only to be used by authorized parties with valid auth tokens.  [Learn about scubawhere](http://www.scubawhere.com) to become an authorized consumer of our API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bryan@scubawhere.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiClient;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * ClasssessionApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ClasssessionApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for classSessionGet
     *
     * Retrieve a class session by ID.
     *
     */
    public function testClassSessionGet()
    {

    }

    /**
     * Test case for createClassSession
     *
     * Create a new class session.
     *
     */
    public function testCreateClassSession()
    {

    }

    /**
     * Test case for deleteClasssession
     *
     * Delete a class session by ID.
     *
     */
    public function testDeleteClasssession()
    {

    }

    /**
     * Test case for editClassSession
     *
     * Update a class session by ID.
     *
     */
    public function testEditClassSession()
    {

    }

    /**
     * Test case for filterClassSession
     *
     * Retrieve all class sessions that match a filter.
     *
     */
    public function testFilterClassSession()
    {

    }

    /**
     * Test case for getAllClassSessions
     *
     * Retrieve all class sessions including any deleted models.
     *
     */
    public function testGetAllClassSessions()
    {

    }

    /**
     * Test case for getAllWithTrashedClassSessions
     *
     * Retrieve all class sessions including any deleted models.
     *
     */
    public function testGetAllWithTrashedClassSessions()
    {

    }

    /**
     * Test case for getClassSessionManifest
     *
     * Retrieve the customer manifest for a class session.
     *
     */
    public function testGetClassSessionManifest()
    {

    }

    /**
     * Test case for getTodaysClassSession
     *
     * Retrieve all class sessions that start today.
     *
     */
    public function testGetTodaysClassSession()
    {

    }

    /**
     * Test case for getTommorowsClassSession
     *
     * Retrieve all class sessions that start tommorow.
     *
     */
    public function testGetTommorowsClassSession()
    {

    }

}
